{"version":3,"file":"index.js","sources":["../../src/base64.ts","../../src/payload.ts","../../src/contexts.ts","../../src/core.ts"],"sourcesContent":["/*\n * Copyright (c) 2013 Kevin van Zonneveld (http://kvz.io)\n * and Contributors (http://phpjs.org/authors)\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n * of the Software, and to permit persons to whom the Software is furnished to do\n * so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n// Deprecated and removed in TypeScript\ndeclare function unescape(s: string): string;\n\nexport function base64urldecode(data: string): string {\n  if (!data) {\n    return data;\n  }\n  const padding = 4 - (data.length % 4);\n  switch (padding) {\n    case 2:\n      data += '==';\n      break;\n    case 3:\n      data += '=';\n      break;\n  }\n  const b64Data = data.replace(/-/g, '+').replace(/_/g, '/');\n  return base64decode(b64Data);\n}\n\n/**\n * Encode string as base64.\n * Any type can be passed, but will be stringified\n *\n * @param data string to encode\n * @returns base64-encoded string\n */\nexport function base64encode(data: string): string {\n  // discuss at: http://phpjs.org/functions/base64_encode/\n  // original by: Tyler Akins (http://rumkin.com)\n  // improved by: Bayron Guevara\n  // improved by: Thunder.m\n  // improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  // improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  // improved by: Rafał Kukawski (http://kukawski.pl)\n  // bugfixed by: Pellentesque Malesuada\n  // example 1: base64_encode('Kevin van Zonneveld');\n  // returns 1: 'S2V2aW4gdmFuIFpvbm5ldmVsZA=='\n  // example 2: base64_encode('a');\n  // returns 2: 'YQ=='\n  // example 3: base64_encode('✓ à la mode');\n  // returns 3: '4pyTIMOgIGxhIG1vZGU='\n\n  const b64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n  let o1,\n    o2,\n    o3,\n    h1,\n    h2,\n    h3,\n    h4,\n    bits,\n    i = 0,\n    ac = 0;\n  const tmp_arr: Array<string> = [];\n\n  if (!data) {\n    return data;\n  }\n\n  data = unescape(encodeURIComponent(data));\n\n  do {\n    // pack three octets into four hexets\n    o1 = data.charCodeAt(i++);\n    o2 = data.charCodeAt(i++);\n    o3 = data.charCodeAt(i++);\n\n    bits = (o1 << 16) | (o2 << 8) | o3;\n\n    h1 = (bits >> 18) & 0x3f;\n    h2 = (bits >> 12) & 0x3f;\n    h3 = (bits >> 6) & 0x3f;\n    h4 = bits & 0x3f;\n\n    // use hexets to index into b64, and append result to encoded string\n    tmp_arr[ac++] = b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4);\n  } while (i < data.length);\n\n  const enc = tmp_arr.join('');\n\n  const r = data.length % 3;\n\n  return (r ? enc.slice(0, r - 3) : enc) + '==='.slice(r || 3);\n}\n\nexport function base64decode(encodedData: string): string {\n  //  discuss at: http://locutus.io/php/base64_decode/\n  // original by: Tyler Akins (http://rumkin.com)\n  // improved by: Thunder.m\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Aman Gupta\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Pellentesque Malesuada\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Indigo744\n  //   example 1: base64_decode('S2V2aW4gdmFuIFpvbm5ldmVsZA==')\n  //   returns 1: 'Kevin van Zonneveld'\n  //   example 2: base64_decode('YQ==')\n  //   returns 2: 'a'\n  //   example 3: base64_decode('4pyTIMOgIGxhIG1vZGU=')\n  //   returns 3: '✓ à la mode'\n\n  // decodeUTF8string()\n  // Internal function to decode properly UTF8 string\n  // Adapted from Solution #1 at https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding\n  const decodeUTF8string = function(str: string) {\n    // Going backwards: from bytestream, to percent-encoding, to original string.\n    return decodeURIComponent(\n      str\n        .split('')\n        .map(function(c) {\n          return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        })\n        .join('')\n    );\n  };\n\n  const b64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n  let o1,\n    o2,\n    o3,\n    h1,\n    h2,\n    h3,\n    h4,\n    bits,\n    i = 0,\n    ac = 0,\n    dec = '';\n  const tmpArr: Array<string> = [];\n\n  if (!encodedData) {\n    return encodedData;\n  }\n\n  encodedData += '';\n\n  do {\n    // unpack four hexets into three octets using index points in b64\n    h1 = b64.indexOf(encodedData.charAt(i++));\n    h2 = b64.indexOf(encodedData.charAt(i++));\n    h3 = b64.indexOf(encodedData.charAt(i++));\n    h4 = b64.indexOf(encodedData.charAt(i++));\n\n    bits = (h1 << 18) | (h2 << 12) | (h3 << 6) | h4;\n\n    o1 = (bits >> 16) & 0xff;\n    o2 = (bits >> 8) & 0xff;\n    o3 = bits & 0xff;\n\n    if (h3 === 64) {\n      tmpArr[ac++] = String.fromCharCode(o1);\n    } else if (h4 === 64) {\n      tmpArr[ac++] = String.fromCharCode(o1, o2);\n    } else {\n      tmpArr[ac++] = String.fromCharCode(o1, o2, o3);\n    }\n  } while (i < encodedData.length);\n\n  dec = tmpArr.join('');\n\n  return decodeUTF8string(dec.replace(/\\0+$/, ''));\n}\n","/*\n * JavaScript tracker core for Snowplow: payload.ts\n *\n * Copyright (c) 2014-2020 Snowplow Analytics Ltd. All rights reserved.\n *\n * This program is licensed to you under the Apache License Version 2.0,\n * and you may not use this file except in compliance with the Apache License Version 2.0.\n * You may obtain a copy of the Apache License Version 2.0 at http://www.apache.org/licenses/LICENSE-2.0.\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the Apache License Version 2.0 is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the Apache License Version 2.0 for the specific language governing permissions and limitations there under.\n */\n\nimport * as base64 from './base64';\n\n/**\n * Interface for a Payload dictionary\n */\nexport interface PayloadDictionary {\n  [key: string]: unknown;\n}\n\n/**\n * Interface for mutable object encapsulating tracker payload\n */\nexport interface PayloadData {\n  /**\n   * Adds an entry to the Payload\n   * @param key Key for Payload dictionary entry\n   * @param value Value for Payload dictionaty entry\n   */\n  add: (key: string, value?: string) => void;\n\n  /**\n   * Merges a payload into the existing payload\n   * @param dict The payload to merge\n   */\n  addDict: (dict: PayloadDictionary) => void;\n\n  /**\n   * Adds a JSON object to the payload - will stringify the JSON object\n   * @param keyIfEncoded key if base64 encoding is enabled\n   * @param keyIfNotEncoded key if base64 encoding is disabled\n   * @param json The json to be stringified and added to the payload\n   */\n  addJson: (keyIfEncoded: string, keyIfNotEncoded: string, json: Record<string, unknown>) => void;\n\n  /**\n   * Builds and returns the Payload\n   */\n  build: () => PayloadDictionary;\n}\n\n/**\n * Base64 encode data with URL and Filename Safe Alphabet (base64url)\n *\n * See: http://tools.ietf.org/html/rfc4648#page-7\n */\nfunction base64urlencode(data: string): string {\n  if (!data) {\n    return data;\n  }\n\n  const enc = base64.base64encode(data);\n  return enc.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n\n/**\n * Is property a non-empty JSON?\n */\nexport function isNonEmptyJson(property: Record<string, unknown>): boolean {\n  if (!isJson(property)) {\n    return false;\n  }\n  for (const key in property) {\n    if (Object.prototype.hasOwnProperty.call(property, key)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Is property a JSON?\n */\nexport function isJson(property: unknown): boolean {\n  const record = property as Record<string, unknown> | null | undefined;\n  return (\n    typeof record !== 'undefined' &&\n    record !== null &&\n    (record.constructor === {}.constructor || record.constructor === [].constructor)\n  );\n}\n\n/**\n * A helper to build a Snowplow request string from an\n * an optional initial value plus a set of individual\n * name-value pairs, provided using the add method.\n *\n * @param base64Encode Whether or not JSONs should be Base64-URL-safe-encoded\n *\n * @return The request string builder, with add, addRaw and build methods\n */\nexport function payloadBuilder(base64Encode: boolean): PayloadData {\n  const dict: PayloadDictionary = {};\n\n  const add = (key: string, value?: unknown): void => {\n    if (value != null && value !== '') {\n      // null also checks undefined\n      dict[key] = value;\n    }\n  };\n\n  const addDict = (dict: PayloadDictionary): void => {\n    for (const key in dict) {\n      if (Object.prototype.hasOwnProperty.call(dict, key)) {\n        add(key, dict[key]);\n      }\n    }\n  };\n\n  const addJson = (keyIfEncoded: string, keyIfNotEncoded: string, json?: Record<string, unknown>): void => {\n    if (json && isNonEmptyJson(json)) {\n      const str = JSON.stringify(json);\n      if (base64Encode) {\n        add(keyIfEncoded, base64urlencode(str));\n      } else {\n        add(keyIfNotEncoded, str);\n      }\n    }\n  };\n\n  const build = (): PayloadDictionary => {\n    return dict;\n  };\n\n  return {\n    add,\n    addDict,\n    addJson,\n    build,\n  };\n}\n","/*\n * JavaScript tracker core for Snowplow: contexts.ts\n *\n * Copyright (c) 2014-2020 Snowplow Analytics Ltd. All rights reserved.\n *\n * This program is licensed to you under the Apache License Version 2.0,\n * and you may not use this file except in compliance with the Apache License Version 2.0.\n * You may obtain a copy of the Apache License Version 2.0 at http://www.apache.org/licenses/LICENSE-2.0.\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the Apache License Version 2.0 is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the Apache License Version 2.0 for the specific language governing permissions and limitations there under.\n */\n\nimport { PayloadData, PayloadDictionary, isNonEmptyJson } from './payload';\nimport { SelfDescribingJson } from './core';\nimport { base64urldecode } from './base64';\n\n// Must import lodash as submodules (https://github.com/rollup/rollup/wiki/Troubleshooting#tree-shaking-doesnt-seem-to-be-working)\nimport isEqual from 'lodash/isEqual';\nimport has from 'lodash/has';\nimport get from 'lodash/get';\nimport every from 'lodash/every';\nimport compact from 'lodash/compact';\nimport map from 'lodash/map';\nimport isPlainObject from 'lodash/isPlainObject';\n\n/**\n * An interface for wrapping the Context Generator arguments\n */\nexport interface ContextGeneratorEvent {\n  event: PayloadDictionary;\n  eventType: string;\n  eventSchema: string;\n}\n\n/**\n * A context generator is a callback that returns a self-describing JSON\n * @param args - Object that contains: event, eventType, eventSchema\n * @return A self-describing JSON\n */\nexport type ContextGenerator = (args?: ContextGeneratorEvent) => SelfDescribingJson;\n\n/**\n * A context primitive is either a self-describing JSON or a context generator\n */\nexport type ContextPrimitive = SelfDescribingJson | ContextGenerator;\n\n/**\n * An interface for wrapping the Filter arguments\n */\nexport interface ContextFilterEvent {\n  event: PayloadDictionary;\n  eventType: string;\n  eventSchema: string;\n}\n\n/**\n * A context filter is a user-supplied callback that is evaluated for each event\n * to determine if the context associated with the filter should be attached to the event\n * @param args - Object that contains: event, eventType, eventSchema\n * @return A self-describing JSON\n */\nexport type ContextFilter = (args?: ContextFilterEvent) => boolean;\n\n/**\n * A filter provider is an array that has two parts: a context filter and context primitives\n * If the context filter evaluates to true, the tracker will attach the context primitive(s)\n */\nexport type FilterProvider = [ContextFilter, Array<ContextPrimitive> | ContextPrimitive];\n\n/**\n * A ruleset has accept or reject properties that contain rules for matching Iglu schema URIs\n */\nexport interface RuleSet {\n  accept?: Array<string> | string;\n  reject?: Array<string> | string;\n}\n\n/**\n * A ruleset provider is an array that has two parts: a ruleset and context primitives\n * If the ruleset allows the current event schema URI, the tracker will attach the context primitive(s)\n */\nexport type RuleSetProvider = [RuleSet, Array<ContextPrimitive> | ContextPrimitive];\n\n/**\n * Conditional context providers are two element arrays used to decide when to attach contexts, where:\n * - the first element is some conditional criterion\n * - the second element is any number of context primitives\n */\nexport type ConditionalContextProvider = FilterProvider | RuleSetProvider;\n\nexport interface GlobalContexts {\n  /**\n   * Returns all Context Primitives\n   */\n  getGlobalPrimitives(): Array<ContextPrimitive>;\n\n  /**\n   * Returns all Conditional Contexts\n   */\n  getConditionalProviders(): Array<ConditionalContextProvider>;\n\n  /**\n   * Adds conditional or primitive global contexts\n   * @param contexts An Array of either Conditional Contexts or Primitive Contexts\n   */\n  addGlobalContexts(contexts: Array<ConditionalContextProvider | ContextPrimitive>): void;\n\n  /**\n   * Removes all global contexts\n   */\n  clearGlobalContexts(): void;\n\n  /**\n   * Removes previously added global context, performs a deep comparison of the contexts or conditional contexts\n   * @param contexts An Array of either Condition Contexts or Primitive Contexts\n   */\n  removeGlobalContexts(contexts: Array<ConditionalContextProvider | ContextPrimitive>): void;\n\n  /**\n   * Returns all applicable global contexts for a specified event\n   * @param event The event to check for applicable global contexts for\n   */\n  getApplicableContexts(event: PayloadData): Array<SelfDescribingJson>;\n}\n\n/**\n * Contains helper functions to aid in the addition and removal of Global Contexts\n */\nexport function globalContexts(): GlobalContexts {\n  let globalPrimitives: Array<ContextPrimitive> = [];\n  let conditionalProviders: Array<ConditionalContextProvider> = [];\n\n  /**\n   * Returns all applicable global contexts for a specified event\n   * @param event The event to check for applicable global contexts for\n   */\n  const assembleAllContexts = (event: PayloadDictionary): Array<SelfDescribingJson> => {\n    const eventSchema = getUsefulSchema(event);\n    const eventType = getEventType(event);\n    const contexts: Array<SelfDescribingJson> = [];\n    const generatedPrimitives = generatePrimitives(globalPrimitives, event, eventType, eventSchema);\n    contexts.push(...generatedPrimitives);\n\n    const generatedConditionals = generateConditionals(conditionalProviders, event, eventType, eventSchema);\n    contexts.push(...generatedConditionals);\n\n    return contexts;\n  };\n\n  return {\n    getGlobalPrimitives(): Array<ContextPrimitive> {\n      return globalPrimitives;\n    },\n\n    getConditionalProviders(): Array<ConditionalContextProvider> {\n      return conditionalProviders;\n    },\n\n    addGlobalContexts(contexts: Array<ConditionalContextProvider | ContextPrimitive>): void {\n      const acceptedConditionalContexts: ConditionalContextProvider[] = [];\n      const acceptedContextPrimitives: ContextPrimitive[] = [];\n      for (const context of contexts) {\n        if (isConditionalContextProvider(context)) {\n          acceptedConditionalContexts.push(context);\n        } else if (isContextPrimitive(context)) {\n          acceptedContextPrimitives.push(context);\n        }\n      }\n      globalPrimitives = globalPrimitives.concat(acceptedContextPrimitives);\n      conditionalProviders = conditionalProviders.concat(acceptedConditionalContexts);\n    },\n\n    clearGlobalContexts(): void {\n      conditionalProviders = [];\n      globalPrimitives = [];\n    },\n\n    removeGlobalContexts(contexts: Array<ConditionalContextProvider | ContextPrimitive>): void {\n      for (const context of contexts) {\n        if (isConditionalContextProvider(context)) {\n          conditionalProviders = conditionalProviders.filter((item) => !isEqual(item, context));\n        } else if (isContextPrimitive(context)) {\n          globalPrimitives = globalPrimitives.filter((item) => !isEqual(item, context));\n        }\n      }\n    },\n\n    getApplicableContexts(event: PayloadData): Array<SelfDescribingJson> {\n      const builtEvent = event.build();\n      if (isEventJson(builtEvent)) {\n        const decodedEvent = getDecodedEvent(builtEvent);\n        return assembleAllContexts(decodedEvent);\n      } else {\n        return [];\n      }\n    },\n  };\n}\n\n/**\n * Returns an array containing the parts of the specified schema\n * @param input A schema string\n */\nexport function getSchemaParts(input: string): Array<string> | undefined {\n  const re = new RegExp(\n    '^iglu:([a-zA-Z0-9-_.]+)/([a-zA-Z0-9-_]+)/jsonschema/([1-9][0-9]*)-(0|[1-9][0-9]*)-(0|[1-9][0-9]*)$'\n  );\n  const matches = re.exec(input);\n  if (matches !== null) return matches.slice(1, 6);\n  return undefined;\n}\n\n/**\n * Validates the vendor section of a schema string contains allowed wildcard values\n * @param parts Array of parts from a schema string\n */\nexport function validateVendorParts(parts: Array<string>): boolean {\n  if (parts[0] === '*' || parts[1] === '*') {\n    return false; // no wildcard in first or second part\n  }\n  if (parts.slice(2).length > 0) {\n    let asterisk = false;\n    for (const part of parts.slice(2)) {\n      if (part === '*')\n        // mark when we've found a wildcard\n        asterisk = true;\n      else if (asterisk)\n        // invalid if alpha parts come after wildcard\n        return false;\n    }\n    return true;\n  } else if (parts.length == 2) return true;\n\n  return false;\n}\n\n/**\n * Validates the vendor part of a schema string is valid for a rule set\n * @param input Vendor part of a schema string\n */\nexport function validateVendor(input: string): boolean {\n  const parts = input.split('.');\n  if (parts && parts.length > 1) return validateVendorParts(parts);\n  return false;\n}\n\n/**\n * Returns all the sections of a schema string that are used to match rules in a ruleset\n * @param input A Schema string\n */\nexport function getRuleParts(input: string): Array<string> | undefined {\n  const re = new RegExp(\n    '^iglu:((?:(?:[a-zA-Z0-9-_]+|\\\\*).)+(?:[a-zA-Z0-9-_]+|\\\\*))/([a-zA-Z0-9-_.]+|\\\\*)/jsonschema/([1-9][0-9]*|\\\\*)-(0|[1-9][0-9]*|\\\\*)-(0|[1-9][0-9]*|\\\\*)$'\n  );\n  const matches = re.exec(input);\n  if (matches !== null && validateVendor(matches[1])) return matches.slice(1, 6);\n  return undefined;\n}\n\n/**\n * Ensures the rules specified in a schema string of a ruleset are valid\n * @param input A Schema string\n */\nexport function isValidRule(input: string): boolean {\n  const ruleParts = getRuleParts(input);\n  if (ruleParts) {\n    const vendor = ruleParts[0];\n    return ruleParts.length === 5 && validateVendor(vendor);\n  }\n  return false;\n}\n\nexport function isStringArray(input: unknown): input is Array<string> {\n  return (\n    Array.isArray(input) &&\n    input.every((x) => {\n      return typeof x === 'string';\n    })\n  );\n}\n\nexport function isValidRuleSetArg(input: unknown): boolean {\n  if (isStringArray(input))\n    return input.every((x: string) => {\n      return isValidRule(x);\n    });\n  else if (typeof input === 'string') return isValidRule(input);\n  return false;\n}\n\nexport function isSelfDescribingJson(input: unknown): input is SelfDescribingJson {\n  const sdj = input as SelfDescribingJson;\n  if (isNonEmptyJson(sdj))\n    if ('schema' in sdj && 'data' in sdj) return typeof sdj.schema === 'string' && typeof sdj.data === 'object';\n  return false;\n}\n\nexport function isEventJson(input: unknown): input is PayloadDictionary {\n  const payload = input as PayloadDictionary;\n  if (isNonEmptyJson(payload) && 'e' in payload) return typeof payload.e === 'string';\n  return false;\n}\n\nexport function isRuleSet(input: unknown): input is Record<string, unknown> {\n  const ruleSet = input as Record<string, unknown>;\n  let ruleCount = 0;\n  if (isPlainObject(input)) {\n    if (has(ruleSet, 'accept')) {\n      if (isValidRuleSetArg(ruleSet['accept'])) {\n        ruleCount += 1;\n      } else {\n        return false;\n      }\n    }\n    if (has(ruleSet, 'reject')) {\n      if (isValidRuleSetArg(ruleSet['reject'])) {\n        ruleCount += 1;\n      } else {\n        return false;\n      }\n    }\n    // if either 'reject' or 'accept' or both exists,\n    // we have a valid ruleset\n    return ruleCount > 0 && ruleCount <= 2;\n  }\n  return false;\n}\n\nexport function isContextGenerator(input: unknown): boolean {\n  return typeof input === 'function' && input.length <= 1;\n}\n\nexport function isContextFilter(input: unknown): boolean {\n  return typeof input === 'function' && input.length <= 1;\n}\n\nexport function isContextPrimitive(input: unknown): input is ContextPrimitive {\n  return isContextGenerator(input) || isSelfDescribingJson(input);\n}\n\nexport function isFilterProvider(input: unknown): boolean {\n  if (Array.isArray(input)) {\n    if (input.length === 2) {\n      if (Array.isArray(input[1])) {\n        return isContextFilter(input[0]) && every(input[1], isContextPrimitive);\n      }\n      return isContextFilter(input[0]) && isContextPrimitive(input[1]);\n    }\n  }\n  return false;\n}\n\nexport function isRuleSetProvider(input: unknown): boolean {\n  if (Array.isArray(input) && input.length === 2) {\n    if (!isRuleSet(input[0])) return false;\n    if (Array.isArray(input[1])) return every(input[1], isContextPrimitive);\n    return isContextPrimitive(input[1]);\n  }\n  return false;\n}\n\nexport function isConditionalContextProvider(input: unknown): input is ConditionalContextProvider {\n  return isFilterProvider(input) || isRuleSetProvider(input);\n}\n\nexport function matchSchemaAgainstRuleSet(ruleSet: RuleSet, schema: string): boolean {\n  let rejectCount = 0;\n  let acceptCount = 0;\n  const acceptRules = get(ruleSet, 'accept');\n  if (Array.isArray(acceptRules)) {\n    if ((ruleSet.accept as Array<string>).some((rule) => matchSchemaAgainstRule(rule, schema))) {\n      acceptCount++;\n    }\n  } else if (typeof acceptRules === 'string') {\n    if (matchSchemaAgainstRule(acceptRules, schema)) {\n      acceptCount++;\n    }\n  }\n\n  const rejectRules = get(ruleSet, 'reject');\n  if (Array.isArray(rejectRules)) {\n    if ((ruleSet.reject as Array<string>).some((rule) => matchSchemaAgainstRule(rule, schema))) {\n      rejectCount++;\n    }\n  } else if (typeof rejectRules === 'string') {\n    if (matchSchemaAgainstRule(rejectRules, schema)) {\n      rejectCount++;\n    }\n  }\n\n  if (acceptCount > 0 && rejectCount === 0) {\n    return true;\n  } else if (acceptCount === 0 && rejectCount > 0) {\n    return false;\n  }\n\n  return false;\n}\n\nexport function matchSchemaAgainstRule(rule: string, schema: string): boolean {\n  if (!isValidRule(rule)) return false;\n  const ruleParts = getRuleParts(rule);\n  const schemaParts = getSchemaParts(schema);\n  if (ruleParts && schemaParts) {\n    if (!matchVendor(ruleParts[0], schemaParts[0])) return false;\n    for (let i = 1; i < 5; i++) {\n      if (!matchPart(ruleParts[i], schemaParts[i])) return false;\n    }\n    return true; // if it hasn't failed, it passes\n  }\n  return false;\n}\n\nfunction matchVendor(rule: string, vendor: string): boolean {\n  // rule and vendor must have same number of elements\n  const vendorParts = vendor.split('.');\n  const ruleParts = rule.split('.');\n  if (vendorParts && ruleParts) {\n    if (vendorParts.length !== ruleParts.length) return false;\n    for (let i = 0; i < ruleParts.length; i++) {\n      if (!matchPart(vendorParts[i], ruleParts[i])) return false;\n    }\n    return true;\n  }\n  return false;\n}\n\nfunction matchPart(rule: string, schema: string): boolean {\n  // parts should be the string nested between slashes in the URI: /example/\n  return (rule && schema && rule === '*') || rule === schema;\n}\n\n// Returns the \"useful\" schema, i.e. what would someone want to use to identify events.\n// The idea being that you can determine the event type from 'e', so getting the schema from\n// 'ue_px.schema'/'ue_pr.schema' would be redundant - it'll return the unstruct_event schema.\n// Instead the schema nested inside the unstruct_event is more useful!\n// This doesn't decode ue_px, it works because it's called by code that has already decoded it\nfunction getUsefulSchema(sb: PayloadDictionary): string {\n  if (typeof get(sb, 'ue_px.data.schema') === 'string') return get(sb, 'ue_px.data.schema') as string;\n  else if (typeof get(sb, 'ue_pr.data.schema') === 'string') return get(sb, 'ue_pr.data.schema') as string;\n  else if (typeof get(sb, 'schema') === 'string') return get(sb, 'schema') as string;\n  return '';\n}\n\nfunction getDecodedEvent(sb: PayloadDictionary): PayloadDictionary {\n  const decodedEvent = { ...sb }; // spread operator, instantiates new object\n  try {\n    if (has(decodedEvent, 'ue_px')) {\n      decodedEvent['ue_px'] = JSON.parse(base64urldecode(get(decodedEvent, ['ue_px']) as string));\n    }\n    return decodedEvent;\n  } catch (e) {\n    return decodedEvent;\n  }\n}\n\nfunction getEventType(sb: Record<string, unknown>): string {\n  return get(sb, 'e', '') as string;\n}\n\nfunction buildGenerator(\n  generator: ContextGenerator,\n  event: PayloadDictionary,\n  eventType: string,\n  eventSchema: string\n): SelfDescribingJson | Array<SelfDescribingJson> | undefined {\n  let contextGeneratorResult: SelfDescribingJson | Array<SelfDescribingJson> | undefined = undefined;\n  try {\n    // try to evaluate context generator\n    const args = {\n      event: event,\n      eventType: eventType,\n      eventSchema: eventSchema,\n    };\n    contextGeneratorResult = generator(args);\n    // determine if the produced result is a valid SDJ\n    if (isSelfDescribingJson(contextGeneratorResult)) {\n      return contextGeneratorResult;\n    } else if (Array.isArray(contextGeneratorResult) && every(contextGeneratorResult, isSelfDescribingJson)) {\n      return contextGeneratorResult;\n    } else {\n      return undefined;\n    }\n  } catch (error) {\n    contextGeneratorResult = undefined;\n  }\n  return contextGeneratorResult;\n}\n\nfunction normalizeToArray<T>(input: Array<T> | T): Array<T> {\n  if (Array.isArray(input)) {\n    return input;\n  }\n  return Array.of(input);\n}\n\nfunction generatePrimitives(\n  contextPrimitives: Array<ContextPrimitive> | ContextPrimitive,\n  event: PayloadDictionary,\n  eventType: string,\n  eventSchema: string\n): Array<SelfDescribingJson> {\n  const normalizedInputs: Array<ContextPrimitive> = normalizeToArray(contextPrimitives);\n  const partialEvaluate = (primitive: ContextPrimitive) => {\n    const result = evaluatePrimitive(primitive, event, eventType, eventSchema);\n    if (result && result.length !== 0) {\n      return result;\n    }\n    return undefined;\n  };\n  const generatedContexts = map(normalizedInputs, partialEvaluate);\n  return ([] as Array<SelfDescribingJson>).concat(...compact(generatedContexts));\n}\n\nfunction evaluatePrimitive(\n  contextPrimitive: ContextPrimitive,\n  event: PayloadDictionary,\n  eventType: string,\n  eventSchema: string\n): Array<SelfDescribingJson> | undefined {\n  if (isSelfDescribingJson(contextPrimitive)) {\n    return [contextPrimitive as SelfDescribingJson];\n  } else if (isContextGenerator(contextPrimitive)) {\n    const generatorOutput = buildGenerator(contextPrimitive as ContextGenerator, event, eventType, eventSchema);\n    if (isSelfDescribingJson(generatorOutput)) {\n      return [generatorOutput as SelfDescribingJson];\n    } else if (Array.isArray(generatorOutput)) {\n      return generatorOutput;\n    }\n  }\n  return undefined;\n}\n\nfunction evaluateProvider(\n  provider: ConditionalContextProvider,\n  event: PayloadDictionary,\n  eventType: string,\n  eventSchema: string\n): Array<SelfDescribingJson> {\n  if (isFilterProvider(provider)) {\n    const filter: ContextFilter = (provider as FilterProvider)[0];\n    let filterResult = false;\n    try {\n      const args = {\n        event: event,\n        eventType: eventType,\n        eventSchema: eventSchema,\n      };\n      filterResult = filter(args);\n    } catch (error) {\n      filterResult = false;\n    }\n    if (filterResult === true) {\n      return generatePrimitives((provider as FilterProvider)[1], event, eventType, eventSchema);\n    }\n  } else if (isRuleSetProvider(provider)) {\n    if (matchSchemaAgainstRuleSet((provider as RuleSetProvider)[0], eventSchema)) {\n      return generatePrimitives((provider as RuleSetProvider)[1], event, eventType, eventSchema);\n    }\n  }\n  return [];\n}\n\nfunction generateConditionals(\n  providers: Array<ConditionalContextProvider> | ConditionalContextProvider,\n  event: PayloadDictionary,\n  eventType: string,\n  eventSchema: string\n): Array<SelfDescribingJson> {\n  const normalizedInput: Array<ConditionalContextProvider> = normalizeToArray(providers);\n  const partialEvaluate = (provider: ConditionalContextProvider) => {\n    const result = evaluateProvider(provider, event, eventType, eventSchema);\n    if (result && result.length !== 0) {\n      return result;\n    }\n    return undefined;\n  };\n  const generatedContexts = map(normalizedInput, partialEvaluate);\n  return ([] as Array<SelfDescribingJson>).concat(...compact(generatedContexts));\n}\n","/*\n * JavaScript tracker core for Snowplow: core.ts\n *\n * Copyright (c) 2014-2020 Snowplow Analytics Ltd. All rights reserved.\n *\n * This program is licensed to you under the Apache License Version 2.0,\n * and you may not use this file except in compliance with the Apache License Version 2.0.\n * You may obtain a copy of the Apache License Version 2.0 at http://www.apache.org/licenses/LICENSE-2.0.\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the Apache License Version 2.0 is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the Apache License Version 2.0 for the specific language governing permissions and limitations there under.\n */\n\nimport { v4 } from 'uuid';\n\nimport { payloadBuilder, PayloadData, PayloadDictionary, isJson } from './payload';\nimport { globalContexts, ConditionalContextProvider, ContextPrimitive, GlobalContexts } from './contexts';\n\n/**\n * Interface common for any Self-Describing JSON such as custom context or\n * Self-describing (ex-unstuctured) event\n */\nexport interface SelfDescribingJson extends Record<string, unknown> {\n  schema: string;\n  data: Record<string, unknown>;\n}\n\n/**\n * Algebraic datatype representing possible timestamp type choice\n */\nexport type Timestamp = TrueTimestamp | DeviceTimestamp | number;\nexport interface TrueTimestamp {\n  readonly type: 'ttm';\n  readonly value: number;\n}\nexport interface DeviceTimestamp {\n  readonly type: 'dtm';\n  readonly value: number;\n}\n\n/**\n * Pair of timestamp type ready to be included to payload\n */\ntype TimestampPayload = TrueTimestamp | DeviceTimestamp;\n\n/**\n * Transform optional/old-behavior number timestamp into`Timestamp` ADT\n *\n * @param tstamp optional number or timestamp object\n * @returns correct timestamp object\n */\nfunction getTimestamp(tstamp?: Timestamp): TimestampPayload {\n  if (tstamp == null) {\n    return { type: 'dtm', value: new Date().getTime() };\n  } else if (typeof tstamp === 'number') {\n    return { type: 'dtm', value: tstamp };\n  } else if (tstamp.type === 'ttm') {\n    // We can return tstamp here, but this is safer fallback\n    return { type: 'ttm', value: tstamp.value };\n  } else {\n    return { type: 'dtm', value: tstamp.value || new Date().getTime() };\n  }\n}\n\n/**\n * Interface containing all Core functions\n */\nexport interface Core {\n  /**\n   * Set a persistent key-value pair to be added to every payload\n   *\n   * @param key Field name\n   * @param value Field value\n   */\n  addPayloadPair: (key: string, value: string) => void;\n\n  /**\n   * Turn base 64 encoding on or off\n   *\n   * @param encode Whether to encode payload\n   */\n  setBase64Encoding(encode: boolean): void;\n\n  /**\n   * Merges a dictionary into payloadPairs\n   *\n   * @param dict Adds a new payload dictionary to the existing one\n   */\n  addPayloadDict(dict: PayloadDictionary): void;\n\n  /**\n   * Replace payloadPairs with a new dictionary\n   *\n   * @param dict Resets all current payload pairs with a new dictionary of pairs\n   */\n  resetPayloadPairs(dict: PayloadDictionary): void;\n\n  /**\n   * Set the tracker version\n   *\n   * @param version The version of the current tracker\n   */\n  setTrackerVersion(version: string): void;\n\n  /**\n   * Set the tracker namespace\n   *\n   * @param name The trackers namespace\n   */\n  setTrackerNamespace(name: string): void;\n\n  /**\n   * Set the application ID\n   *\n   * @param appId An application ID which identifies the current application\n   */\n  setAppId(appId: string): void;\n\n  /**\n   * Set the platform\n   *\n   * @param value A valid Snowplow platform value\n   */\n  setPlatform(value: string): void;\n\n  /**\n   * Set the user ID\n   *\n   * @param userId The custom user id\n   */\n  setUserId(userId: string): void;\n\n  /**\n   * Set the screen resolution\n   *\n   * @param width screen resolution width\n   * @param height screen resolution height\n   */\n  setScreenResolution(width: string, height: string): void;\n\n  /**\n   * Set the viewport dimensions\n   *\n   * @param width viewport width\n   * @param height viewport height\n   */\n  setViewport(width: string, height: string): void;\n\n  /**\n   * Set the color depth\n   *\n   * @param depth A color depth value as string\n   */\n  setColorDepth(depth: string): void;\n\n  /**\n   * Set the timezone\n   *\n   * @param timezone A timezone string\n   */\n  setTimezone(timezone: string): void;\n\n  /**\n   * Set the language\n   *\n   * @param lang A language string e.g. 'en-UK'\n   */\n  setLang(lang: string): void;\n\n  /**\n   * Set the IP address\n   *\n   * @param ip An IP Address string\n   */\n  setIpAddress(ip: string): void;\n\n  /**\n   * Set the Useragent\n   *\n   * @param useragent A useragent string\n   */\n  setUseragent(useragent: string): void;\n\n  /**\n   * Log a self-describing event\n   *\n   * @param properties Contains the properties and schema location for the event\n   * @param context Custom contexts relating to the event\n   * @param tstamp Timestamp of the event\n   * @param afterTrack A callback function triggered after event is tracked\n   * @return Payload\n   */\n  trackSelfDescribingEvent: (\n    properties: Record<string, unknown>,\n    context?: Array<SelfDescribingJson>,\n    tstamp?: Timestamp,\n    afterTrack?: (Payload: PayloadDictionary) => void\n  ) => PayloadData;\n\n  /**\n   * Log the page view / visit\n   *\n   * @param pageUrl Current page URL\n   * @param pageTitle The user-defined page title to attach to this page view\n   * @param referrer URL users came from\n   * @param context Custom contexts relating to the event\n   * @param tstamp Timestamp of the event\n   * @param afterTrack A callback function triggered after event is tracked\n   * @return Payload\n   */\n  trackPageView(\n    pageUrl: string,\n    pageTitle: string,\n    referrer: string,\n    context?: Array<SelfDescribingJson>,\n    tstamp?: Timestamp,\n    afterTrack?: (Payload: PayloadDictionary) => void\n  ): PayloadData;\n\n  /**\n   * Log that a user is still viewing a given page\n   * by sending a page ping\n   *\n   * @param pageUrl Current page URL\n   * @param pageTitle The page title to attach to this page ping\n   * @param referrer URL users came from\n   * @param minXOffset Minimum page x offset seen in the last ping period\n   * @param maxXOffset Maximum page x offset seen in the last ping period\n   * @param minYOffset Minimum page y offset seen in the last ping period\n   * @param maxYOffset Maximum page y offset seen in the last ping period\n   * @param context Custom contexts relating to the event\n   * @param tstamp Timestamp of the event\n   * @param afterTrack A callback function triggered after event is tracked\n   * @return Payload\n   */\n  trackPagePing(\n    pageUrl: string,\n    pageTitle: string,\n    referrer: string,\n    minXOffset: number,\n    maxXOffset: number,\n    minYOffset: number,\n    maxYOffset: number,\n    context?: Array<SelfDescribingJson>,\n    tstamp?: Timestamp,\n    afterTrack?: (Payload: PayloadDictionary) => void\n  ): PayloadData;\n\n  /**\n   * Track a structured event\n   *\n   * @param category The name you supply for the group of objects you want to track\n   * @param action A string that is uniquely paired with each category, and commonly used to define the type of user interaction for the web object\n   * @param label An optional string to provide additional dimensions to the event data\n   * @param property Describes the object or the action performed on it, e.g. quantity of item added to basket\n   * @param value An integer that you can use to provide numerical data about the user event\n   * @param context Custom contexts relating to the event\n   * @param tstamp Timestamp of the event\n   * @param afterTrack A callback function triggered after event is tracked\n   * @return Payload\n   */\n  trackStructEvent(\n    category: string,\n    action: string,\n    label: string,\n    property: string,\n    value?: number,\n    context?: Array<SelfDescribingJson>,\n    tstamp?: Timestamp,\n    afterTrack?: (Payload: PayloadDictionary) => void\n  ): PayloadData;\n\n  /**\n   * Track an ecommerce transaction\n   *\n   * @param orderId Internal unique order id number for this transaction.\n   * @param affiliation Partner or store affiliation.\n   * @param totalValue Total amount of the transaction.\n   * @param taxValue Tax amount of the transaction.\n   * @param shipping Shipping charge for the transaction.\n   * @param city City to associate with transaction.\n   * @param state State to associate with transaction.\n   * @param country Country to associate with transaction.\n   * @param currency Currency to associate with this transaction.\n   * @param context Context relating to the event.\n   * @param tstamp Timestamp of the event\n   * @param afterTrack A callback function triggered after event is tracked\n   * @return Payload\n   */\n  trackEcommerceTransaction(\n    orderId: string,\n    affiliation: string,\n    totalValue: string,\n    taxValue?: string,\n    shipping?: string,\n    city?: string,\n    state?: string,\n    country?: string,\n    currency?: string,\n    context?: Array<SelfDescribingJson>,\n    tstamp?: Timestamp,\n    afterTrack?: (Payload: PayloadDictionary) => void\n  ): PayloadData;\n\n  /**\n   * Track an ecommerce transaction item\n   *\n   * @param orderId Required Order ID of the transaction to associate with item.\n   * @param sku Item's SKU code.\n   * @param name Product name.\n   * @param category Product category.\n   * @param price Product price.\n   * @param quantity Purchase quantity.\n   * @param currency Product price currency.\n   * @param context Context relating to the event.\n   * @param tstamp Timestamp of the event\n   * @param afterTrack A callback function triggered after event is tracked\n   * @return Payload\n   */\n  trackEcommerceTransactionItem(\n    orderId: string,\n    sku: string,\n    name: string,\n    category: string,\n    price: string,\n    quantity: string,\n    currency?: string,\n    context?: Array<SelfDescribingJson>,\n    tstamp?: Timestamp,\n    afterTrack?: (Payload: PayloadDictionary) => void\n  ): PayloadData;\n\n  /**\n   * Track a screen view self describing event\n   *\n   * @param name The name of the screen\n   * @param id The ID of the screen\n   * @param context Contexts relating to the event\n   * @param tstamp Timestamp of the event\n   * @param afterTrack A callback function triggered after event is tracked\n   * @return Payload\n   */\n  trackScreenView(\n    name: string,\n    id: string,\n    context?: Array<SelfDescribingJson>,\n    tstamp?: Timestamp,\n    afterTrack?: (Payload: PayloadDictionary) => void\n  ): PayloadData;\n\n  /**\n   * Log the link or click with the server\n   *\n   * @param targetUrl\n   * @param elementId\n   * @param elementClasses\n   * @param elementTarget\n   * @param elementContent innerHTML of the link\n   * @param context Custom contexts relating to the event\n   * @param tstamp Timestamp of the event\n   * @param afterTrack A callback function triggered after event is tracked\n   * @return Payload\n   */\n  trackLinkClick(\n    targetUrl: string,\n    elementId: string,\n    elementClasses: Array<string>,\n    elementTarget: string,\n    elementContent: string,\n    context?: Array<SelfDescribingJson>,\n    tstamp?: Timestamp,\n    afterTrack?: (Payload: PayloadDictionary) => void\n  ): PayloadData;\n\n  /**\n   * Track an ad being served\n   *\n   * @param impressionId Identifier for a particular ad impression\n   * @param costModel The cost model. 'cpa', 'cpc', or 'cpm'\n   * @param cost Cost\n   * @param targetUrl URL ad pointing to\n   * @param bannerId Identifier for the ad banner displayed\n   * @param zoneId Identifier for the ad zone\n   * @param advertiserId Identifier for the advertiser\n   * @param campaignId Identifier for the campaign which the banner belongs to\n   * @param context Custom contexts relating to the event\n   * @param tstamp Timestamp of the event\n   * @param afterTrack A callback function triggered after event is tracked\n   * @return Payload\n   */\n  trackAdImpression(\n    impressionId: string,\n    costModel: string,\n    cost: number,\n    targetUrl: string,\n    bannerId: string,\n    zoneId: string,\n    advertiserId: string,\n    campaignId: string,\n    context?: Array<SelfDescribingJson>,\n    tstamp?: Timestamp,\n    afterTrack?: (Payload: PayloadDictionary) => void\n  ): PayloadData;\n\n  /**\n   * Track an ad being clicked\n   *\n   * @param targetUrl (required) The link's target URL\n   * @param clickId Identifier for the ad click\n   * @param costModel The cost model. 'cpa', 'cpc', or 'cpm'\n   * @param cost Cost\n   * @param bannerId Identifier for the ad banner displayed\n   * @param zoneId Identifier for the ad zone\n   * @param impressionId Identifier for a particular ad impression\n   * @param advertiserId Identifier for the advertiser\n   * @param campaignId Identifier for the campaign which the banner belongs to\n   * @param context Custom contexts relating to the event\n   * @param tstamp Timestamp of the event\n   * @param afterTrack A callback function triggered after event is tracked\n   * @return Payload\n   */\n  trackAdClick(\n    targetUrl: string,\n    clickId: string,\n    costModel: string,\n    cost: number,\n    bannerId: string,\n    zoneId: string,\n    impressionId: string,\n    advertiserId: string,\n    campaignId: string,\n    context?: Array<SelfDescribingJson>,\n    tstamp?: Timestamp,\n    afterTrack?: (Payload: PayloadDictionary) => void\n  ): PayloadData;\n\n  /**\n   * Track an ad conversion event\n   *\n   * @param conversionId Identifier for the ad conversion event\n   * @param costModel The cost model. 'cpa', 'cpc', or 'cpm'\n   * @param cost Cost\n   * @param category The name you supply for the group of objects you want to track\n   * @param action A string that is uniquely paired with each category\n   * @param property Describes the object of the conversion or the action performed on it\n   * @param initialValue Revenue attributable to the conversion at time of conversion\n   * @param advertiserId Identifier for the advertiser\n   * @param campaignId Identifier for the campaign which the banner belongs to\n   * @param context Custom contexts relating to the event\n   * @param tstamp Timestamp of the event\n   * @param afterTrack A callback function triggered after event is tracked\n   * @return Payload\n   */\n  trackAdConversion(\n    conversionId: string,\n    costModel: string,\n    cost: number,\n    category: string,\n    action: string,\n    property: string,\n    initialValue: number,\n    advertiserId: string,\n    campaignId: string,\n    context?: Array<SelfDescribingJson>,\n    tstamp?: Timestamp,\n    afterTrack?: (Payload: PayloadDictionary) => void\n  ): PayloadData;\n\n  /**\n   * Track a social event\n   *\n   * @param action Social action performed\n   * @param network Social network\n   * @param target Object of the social action e.g. the video liked, the tweet retweeted\n   * @param context Custom contexts relating to the event\n   * @param tstamp Timestamp of the event\n   * @param afterTrack A callback function triggered after event is tracked\n   * @return Payload\n   */\n  trackSocialInteraction(\n    action: string,\n    network: string,\n    target: string,\n    context?: Array<SelfDescribingJson>,\n    tstamp?: Timestamp,\n    afterTrack?: (Payload: PayloadDictionary) => void\n  ): PayloadData;\n\n  /**\n   * Track an add-to-cart event\n   *\n   * @param sku Item's SKU code.\n   * @param name Product name.\n   * @param category Product category.\n   * @param unitPrice Product price.\n   * @param quantity Quantity added.\n   * @param currency Product price currency.\n   * @param context Context relating to the event.\n   * @param tstamp Timestamp of the event\n   * @param afterTrack A callback function triggered after event is tracked\n   * @return Payload\n   */\n  trackAddToCart(\n    sku: string,\n    name: string,\n    category: string,\n    unitPrice: string,\n    quantity: string,\n    currency?: string,\n    context?: Array<SelfDescribingJson>,\n    tstamp?: Timestamp,\n    afterTrack?: (Payload: PayloadDictionary) => void\n  ): PayloadData;\n\n  /**\n   * Track a remove-from-cart event\n   *\n   * @param sku Item's SKU code.\n   * @param name Product name.\n   * @param category Product category.\n   * @param unitPrice Product price.\n   * @param quantity Quantity removed.\n   * @param currency Product price currency.\n   * @param context Context relating to the event.\n   * @param tstamp Timestamp of the event\n   * @param afterTrack A callback function triggered after event is tracked\n   * @return Payload\n   */\n  trackRemoveFromCart(\n    sku: string,\n    name: string,\n    category: string,\n    unitPrice: string,\n    quantity: string,\n    currency?: string,\n    context?: Array<SelfDescribingJson>,\n    tstamp?: Timestamp,\n    afterTrack?: (Payload: PayloadDictionary) => void\n  ): PayloadData;\n\n  /**\n   * Track the value of a form field changing or receiving focus\n   *\n   * @param schema The schema type of the event\n   * @param formId The parent form ID\n   * @param elementId ID of the changed element\n   * @param nodeName \"INPUT\", \"TEXTAREA\", or \"SELECT\"\n   * @param type Type of the changed element if its type is \"INPUT\"\n   * @param elementClasses List of classes of the changed element\n   * @param value The new value of the changed element\n   * @param context Context relating to the event.\n   * @param tstamp Timestamp of the event\n   * @param afterTrack A callback function triggered after event is tracked\n   * @return Payload\n   */\n  trackFormFocusOrChange(\n    schema: string,\n    formId: string,\n    elementId: string,\n    nodeName: string,\n    type: string,\n    elementClasses: Array<string>,\n    value: string,\n    context?: Array<SelfDescribingJson>,\n    tstamp?: Timestamp,\n    afterTrack?: (Payload: PayloadDictionary) => void\n  ): PayloadData;\n\n  /**\n   * Track a form submission event\n   *\n   * @param formId ID of the form\n   * @param formClasses Classes of the form\n   * @param elements Mutable elements within the form\n   * @param context Context relating to the event.\n   * @param tstamp Timestamp of the event\n   * @param afterTrack A callback function triggered after event is tracked\n   * @return Payload\n   */\n  trackFormSubmission(\n    formId: string,\n    formClasses: Array<string>,\n    elements: Array<Record<string, unknown>>,\n    context?: Array<SelfDescribingJson>,\n    tstamp?: Timestamp,\n    afterTrack?: (Payload: PayloadDictionary) => void\n  ): PayloadData;\n\n  /**\n   * Track an internal search event\n   *\n   * @param terms Search terms\n   * @param filters Search filters\n   * @param totalResults Number of results\n   * @param pageResults Number of results displayed on page\n   * @param context Context relating to the event.\n   * @param tstamp Timestamp of the event\n   * @return Payload\n   */\n  trackSiteSearch(\n    terms: Array<string>,\n    filters: Record<string, string | boolean>,\n    totalResults: number,\n    pageResults: number,\n    context?: Array<SelfDescribingJson>,\n    tstamp?: Timestamp,\n    afterTrack?: (Payload: PayloadDictionary) => void\n  ): PayloadData;\n\n  /**\n   * Track a consent withdrawn event\n   *\n   * @param all Indicates user withdraws consent for all documents.\n   * @param id ID number associated with document.\n   * @param version Version number of document.\n   * @param name Name of document.\n   * @param description Description of document.\n   * @param context Context relating to the event.\n   * @param tstamp Timestamp of the event.\n   * @param afterTrack A callback function triggered after event is tracked\n   * @return Payload\n   */\n  trackConsentWithdrawn(\n    all: boolean,\n    id?: string,\n    version?: string,\n    name?: string,\n    description?: string,\n    context?: Array<SelfDescribingJson>,\n    tstamp?: Timestamp,\n    afterTrack?: (Payload: PayloadDictionary) => void\n  ): PayloadData;\n\n  /**\n   * Track a consent granted event\n   *\n   * @param id ID number associated with document.\n   * @param version Version number of document.\n   * @param name Name of document.\n   * @param description Description of document.\n   * @param expiry Date-time when consent expires.\n   * @param context Context relating to the event.\n   * @param tstamp Timestamp of the event.\n   * @param afterTrack A callback function triggered after event is tracked\n   * @return Payload\n   */\n  trackConsentGranted(\n    id: string,\n    version: string,\n    name?: string,\n    description?: string,\n    expiry?: string,\n    context?: Array<SelfDescribingJson>,\n    tstamp?: Timestamp,\n    afterTrack?: (Payload: PayloadDictionary) => void\n  ): PayloadData;\n\n  /**\n   * Adds contexts globally, contexts added here will be attached to all applicable events\n   * @param contexts An array containing either contexts or a conditional contexts\n   */\n  addGlobalContexts(contexts: Array<ConditionalContextProvider | ContextPrimitive>): void;\n\n  /**\n   * Removes all global contexts\n   */\n  clearGlobalContexts(): void;\n\n  /**\n   * Removes previously added global context, performs a deep comparison of the contexts or conditional contexts\n   * @param contexts An array containing either contexts or a conditional contexts\n   */\n  removeGlobalContexts(contexts: Array<ConditionalContextProvider | ContextPrimitive>): void;\n}\n\n/**\n * Create a tracker core object\n *\n * @param base64 Whether to base 64 encode contexts and self describing event JSONs\n * @param callback Function applied to every payload dictionary object\n * @return Tracker core\n */\nexport function trackerCore(base64: boolean, callback?: (PayloadData: PayloadData) => void): Core {\n  const globalContextsHelper: GlobalContexts = globalContexts();\n\n  // Dictionary of key-value pairs which get added to every payload, e.g. tracker version\n  let payloadPairs: PayloadDictionary = {};\n\n  // base 64 encoding should default to true\n  if (typeof base64 === 'undefined') {\n    base64 = true;\n  }\n\n  /**\n   * Returns a copy of a JSON with undefined and null properties removed\n   *\n   * @param eventJson JSON object to clean\n   * @param exemptFields Set of fields which should not be removed even if empty\n   * @return A cleaned copy of eventJson\n   */\n  const removeEmptyProperties = (\n    eventJson: PayloadDictionary,\n    exemptFields?: { [key: string]: boolean }\n  ): PayloadDictionary => {\n    const ret: PayloadDictionary = {};\n    exemptFields = exemptFields || {};\n    for (const k in eventJson) {\n      if (exemptFields[k] || (eventJson[k] !== null && typeof eventJson[k] !== 'undefined')) {\n        ret[k] = eventJson[k];\n      }\n    }\n    return ret;\n  };\n\n  /**\n   * Wraps an array of custom contexts in a self-describing JSON\n   *\n   * @param contexts Array of custom context self-describing JSONs\n   * @return Outer JSON\n   */\n  const completeContexts = (contexts?: Array<SelfDescribingJson>): Record<string, unknown> | undefined => {\n    if (contexts && contexts.length) {\n      return {\n        schema: 'iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-0',\n        data: contexts,\n      };\n    }\n    return undefined;\n  };\n\n  /**\n   * Adds all global contexts to a contexts array\n   *\n   * @param sb PayloadData\n   * @param contexts Custom contexts relating to the event\n   */\n  const attachGlobalContexts = (sb: PayloadData, contexts?: Array<SelfDescribingJson>): Array<SelfDescribingJson> => {\n    const applicableContexts: Array<SelfDescribingJson> = globalContextsHelper.getApplicableContexts(sb);\n    const returnedContexts: Array<SelfDescribingJson> = [];\n    if (contexts && contexts.length) {\n      returnedContexts.push(...contexts);\n    }\n    if (applicableContexts && applicableContexts.length) {\n      returnedContexts.push(...applicableContexts);\n    }\n    return returnedContexts;\n  };\n\n  /**\n   * Gets called by every trackXXX method\n   * Adds context and payloadPairs name-value pairs to the payload\n   * Applies the callback to the built payload\n   *\n   * @param sb Payload\n   * @param context Custom contexts relating to the event\n   * @param tstamp Timestamp of the event\n   * @param afterTrack A callback function triggered after event is tracked\n   * @return Payload after the callback is applied\n   */\n  const track = (\n    sb: PayloadData,\n    context?: Array<SelfDescribingJson>,\n    tstamp?: Timestamp,\n    afterTrack?: (Payload: PayloadDictionary) => void\n  ): PayloadData => {\n    sb.addDict(payloadPairs);\n    sb.add('eid', v4());\n    const timestamp = getTimestamp(tstamp);\n    sb.add(timestamp.type, timestamp.value.toString());\n    const allContexts = attachGlobalContexts(sb, context);\n    const wrappedContexts = completeContexts(allContexts);\n    if (wrappedContexts !== undefined) {\n      sb.addJson('cx', 'co', wrappedContexts);\n    }\n\n    if (typeof callback === 'function') {\n      callback(sb);\n    }\n\n    try {\n      afterTrack && afterTrack(sb.build());\n    } catch (ex) {\n      console.warn('Snowplow: error running custom callback');\n    }\n\n    return sb;\n  };\n\n  /**\n   * Log a self-describing event\n   *\n   * @param properties Contains the properties and schema location for the event\n   * @param context Custom contexts relating to the event\n   * @param tstamp Timestamp of the event\n   * @param afterTrack A callback function triggered after event is tracked\n   * @return Payload\n   */\n  const trackSelfDescribingEvent = (\n    properties: Record<string, unknown>,\n    context?: Array<SelfDescribingJson>,\n    tstamp?: Timestamp,\n    afterTrack?: (Payload: PayloadDictionary) => void\n  ): PayloadData => {\n    const sb = payloadBuilder(base64);\n    const ueJson = {\n      schema: 'iglu:com.snowplowanalytics.snowplow/unstruct_event/jsonschema/1-0-0',\n      data: properties,\n    };\n\n    sb.add('e', 'ue');\n    sb.addJson('ue_px', 'ue_pr', ueJson);\n\n    return track(sb, context, tstamp, afterTrack);\n  };\n\n  /**\n   * Set a persistent key-value pair to be added to every payload\n   *\n   * @param key Field name\n   * @param value Field value\n   */\n  const addPayloadPair = (key: string, value: string): void => {\n    payloadPairs[key] = value;\n  };\n\n  return {\n    addPayloadPair,\n\n    setBase64Encoding(encode: boolean): void {\n      base64 = encode;\n    },\n\n    addPayloadDict(dict: PayloadDictionary): void {\n      for (const key in dict) {\n        if (Object.prototype.hasOwnProperty.call(dict, key)) {\n          payloadPairs[key] = dict[key];\n        }\n      }\n    },\n\n    resetPayloadPairs(dict: PayloadDictionary): void {\n      payloadPairs = isJson(dict) ? dict : {};\n    },\n\n    setTrackerVersion(version: string): void {\n      addPayloadPair('tv', version);\n    },\n\n    setTrackerNamespace(name: string): void {\n      addPayloadPair('tna', name);\n    },\n\n    setAppId(appId: string): void {\n      addPayloadPair('aid', appId);\n    },\n\n    setPlatform(value: string): void {\n      addPayloadPair('p', value);\n    },\n\n    setUserId(userId: string): void {\n      addPayloadPair('uid', userId);\n    },\n\n    setScreenResolution(width: string, height: string): void {\n      addPayloadPair('res', width + 'x' + height);\n    },\n\n    setViewport(width: string, height: string): void {\n      addPayloadPair('vp', width + 'x' + height);\n    },\n\n    setColorDepth(depth: string): void {\n      addPayloadPair('cd', depth);\n    },\n\n    setTimezone(timezone: string): void {\n      addPayloadPair('tz', timezone);\n    },\n\n    setLang(lang: string): void {\n      addPayloadPair('lang', lang);\n    },\n\n    setIpAddress(ip: string): void {\n      addPayloadPair('ip', ip);\n    },\n\n    setUseragent(useragent: string): void {\n      addPayloadPair('ua', useragent);\n    },\n\n    trackSelfDescribingEvent,\n\n    trackPageView(\n      pageUrl: string,\n      pageTitle: string,\n      referrer: string,\n      context?: Array<SelfDescribingJson>,\n      tstamp?: Timestamp,\n      afterTrack?: (Payload: PayloadDictionary) => void\n    ): PayloadData {\n      const sb = payloadBuilder(base64);\n      sb.add('e', 'pv'); // 'pv' for Page View\n      sb.add('url', pageUrl);\n      sb.add('page', pageTitle);\n      sb.add('refr', referrer);\n\n      return track(sb, context, tstamp, afterTrack);\n    },\n\n    trackPagePing(\n      pageUrl: string,\n      pageTitle: string,\n      referrer: string,\n      minXOffset: number,\n      maxXOffset: number,\n      minYOffset: number,\n      maxYOffset: number,\n      context?: Array<SelfDescribingJson>,\n      tstamp?: Timestamp,\n      afterTrack?: (Payload: PayloadDictionary) => void\n    ): PayloadData {\n      const sb = payloadBuilder(base64);\n      sb.add('e', 'pp'); // 'pp' for Page Ping\n      sb.add('url', pageUrl);\n      sb.add('page', pageTitle);\n      sb.add('refr', referrer);\n      sb.add('pp_mix', minXOffset.toString());\n      sb.add('pp_max', maxXOffset.toString());\n      sb.add('pp_miy', minYOffset.toString());\n      sb.add('pp_may', maxYOffset.toString());\n\n      return track(sb, context, tstamp, afterTrack);\n    },\n\n    trackStructEvent(\n      category: string,\n      action: string,\n      label: string,\n      property: string,\n      value?: number,\n      context?: Array<SelfDescribingJson>,\n      tstamp?: Timestamp,\n      afterTrack?: (Payload: PayloadDictionary) => void\n    ): PayloadData {\n      const sb = payloadBuilder(base64);\n      sb.add('e', 'se'); // 'se' for Structured Event\n      sb.add('se_ca', category);\n      sb.add('se_ac', action);\n      sb.add('se_la', label);\n      sb.add('se_pr', property);\n      sb.add('se_va', value == null ? undefined : value.toString());\n\n      return track(sb, context, tstamp, afterTrack);\n    },\n\n    trackEcommerceTransaction(\n      orderId: string,\n      affiliation: string,\n      totalValue: string,\n      taxValue?: string,\n      shipping?: string,\n      city?: string,\n      state?: string,\n      country?: string,\n      currency?: string,\n      context?: Array<SelfDescribingJson>,\n      tstamp?: Timestamp,\n      afterTrack?: (Payload: PayloadDictionary) => void\n    ): PayloadData {\n      const sb = payloadBuilder(base64);\n      sb.add('e', 'tr'); // 'tr' for Transaction\n      sb.add('tr_id', orderId);\n      sb.add('tr_af', affiliation);\n      sb.add('tr_tt', totalValue);\n      sb.add('tr_tx', taxValue);\n      sb.add('tr_sh', shipping);\n      sb.add('tr_ci', city);\n      sb.add('tr_st', state);\n      sb.add('tr_co', country);\n      sb.add('tr_cu', currency);\n\n      return track(sb, context, tstamp, afterTrack);\n    },\n\n    trackEcommerceTransactionItem(\n      orderId: string,\n      sku: string,\n      name: string,\n      category: string,\n      price: string,\n      quantity: string,\n      currency?: string,\n      context?: Array<SelfDescribingJson>,\n      tstamp?: Timestamp,\n      afterTrack?: (Payload: PayloadDictionary) => void\n    ): PayloadData {\n      const sb = payloadBuilder(base64);\n      sb.add('e', 'ti'); // 'tr' for Transaction Item\n      sb.add('ti_id', orderId);\n      sb.add('ti_sk', sku);\n      sb.add('ti_nm', name);\n      sb.add('ti_ca', category);\n      sb.add('ti_pr', price);\n      sb.add('ti_qu', quantity);\n      sb.add('ti_cu', currency);\n\n      return track(sb, context, tstamp, afterTrack);\n    },\n\n    trackScreenView(\n      name: string,\n      id: string,\n      context?: Array<SelfDescribingJson>,\n      tstamp?: Timestamp,\n      afterTrack?: (Payload: PayloadDictionary) => void\n    ): PayloadData {\n      return trackSelfDescribingEvent(\n        {\n          schema: 'iglu:com.snowplowanalytics.snowplow/screen_view/jsonschema/1-0-0',\n          data: removeEmptyProperties({\n            name: name,\n            id: id,\n          }),\n        },\n        context,\n        tstamp,\n        afterTrack\n      );\n    },\n\n    trackLinkClick(\n      targetUrl: string,\n      elementId: string,\n      elementClasses: Array<string>,\n      elementTarget: string,\n      elementContent: string,\n      context?: Array<SelfDescribingJson>,\n      tstamp?: Timestamp,\n      afterTrack?: (Payload: PayloadDictionary) => void\n    ): PayloadData {\n      const eventJson = {\n        schema: 'iglu:com.snowplowanalytics.snowplow/link_click/jsonschema/1-0-1',\n        data: removeEmptyProperties({\n          targetUrl: targetUrl,\n          elementId: elementId,\n          elementClasses: elementClasses,\n          elementTarget: elementTarget,\n          elementContent: elementContent,\n        }),\n      };\n\n      return trackSelfDescribingEvent(eventJson, context, tstamp, afterTrack);\n    },\n\n    trackAdImpression(\n      impressionId: string,\n      costModel: string,\n      cost: number,\n      targetUrl: string,\n      bannerId: string,\n      zoneId: string,\n      advertiserId: string,\n      campaignId: string,\n      context?: Array<SelfDescribingJson>,\n      tstamp?: Timestamp,\n      afterTrack?: (Payload: PayloadDictionary) => void\n    ): PayloadData {\n      const eventJson = {\n        schema: 'iglu:com.snowplowanalytics.snowplow/ad_impression/jsonschema/1-0-0',\n        data: removeEmptyProperties({\n          impressionId: impressionId,\n          costModel: costModel,\n          cost: cost,\n          targetUrl: targetUrl,\n          bannerId: bannerId,\n          zoneId: zoneId,\n          advertiserId: advertiserId,\n          campaignId: campaignId,\n        }),\n      };\n\n      return trackSelfDescribingEvent(eventJson, context, tstamp, afterTrack);\n    },\n\n    trackAdClick(\n      targetUrl: string,\n      clickId: string,\n      costModel: string,\n      cost: number,\n      bannerId: string,\n      zoneId: string,\n      impressionId: string,\n      advertiserId: string,\n      campaignId: string,\n      context?: Array<SelfDescribingJson>,\n      tstamp?: Timestamp,\n      afterTrack?: (Payload: PayloadDictionary) => void\n    ): PayloadData {\n      const eventJson = {\n        schema: 'iglu:com.snowplowanalytics.snowplow/ad_click/jsonschema/1-0-0',\n        data: removeEmptyProperties({\n          targetUrl: targetUrl,\n          clickId: clickId,\n          costModel: costModel,\n          cost: cost,\n          bannerId: bannerId,\n          zoneId: zoneId,\n          impressionId: impressionId,\n          advertiserId: advertiserId,\n          campaignId: campaignId,\n        }),\n      };\n\n      return trackSelfDescribingEvent(eventJson, context, tstamp, afterTrack);\n    },\n\n    trackAdConversion(\n      conversionId: string,\n      costModel: string,\n      cost: number,\n      category: string,\n      action: string,\n      property: string,\n      initialValue: number,\n      advertiserId: string,\n      campaignId: string,\n      context?: Array<SelfDescribingJson>,\n      tstamp?: Timestamp,\n      afterTrack?: (Payload: PayloadDictionary) => void\n    ): PayloadData {\n      const eventJson = {\n        schema: 'iglu:com.snowplowanalytics.snowplow/ad_conversion/jsonschema/1-0-0',\n        data: removeEmptyProperties({\n          conversionId: conversionId,\n          costModel: costModel,\n          cost: cost,\n          category: category,\n          action: action,\n          property: property,\n          initialValue: initialValue,\n          advertiserId: advertiserId,\n          campaignId: campaignId,\n        }),\n      };\n\n      return trackSelfDescribingEvent(eventJson, context, tstamp, afterTrack);\n    },\n\n    trackSocialInteraction(\n      action: string,\n      network: string,\n      target: string,\n      context?: Array<SelfDescribingJson>,\n      tstamp?: Timestamp,\n      afterTrack?: (Payload: PayloadDictionary) => void\n    ): PayloadData {\n      const eventJson = {\n        schema: 'iglu:com.snowplowanalytics.snowplow/social_interaction/jsonschema/1-0-0',\n        data: removeEmptyProperties({\n          action: action,\n          network: network,\n          target: target,\n        }),\n      };\n\n      return trackSelfDescribingEvent(eventJson, context, tstamp, afterTrack);\n    },\n\n    trackAddToCart(\n      sku: string,\n      name: string,\n      category: string,\n      unitPrice: string,\n      quantity: string,\n      currency?: string,\n      context?: Array<SelfDescribingJson>,\n      tstamp?: Timestamp,\n      afterTrack?: (Payload: PayloadDictionary) => void\n    ): PayloadData {\n      return trackSelfDescribingEvent(\n        {\n          schema: 'iglu:com.snowplowanalytics.snowplow/add_to_cart/jsonschema/1-0-0',\n          data: removeEmptyProperties({\n            sku: sku,\n            name: name,\n            category: category,\n            unitPrice: unitPrice,\n            quantity: quantity,\n            currency: currency,\n          }),\n        },\n        context,\n        tstamp,\n        afterTrack\n      );\n    },\n\n    trackRemoveFromCart(\n      sku: string,\n      name: string,\n      category: string,\n      unitPrice: string,\n      quantity: string,\n      currency?: string,\n      context?: Array<SelfDescribingJson>,\n      tstamp?: Timestamp,\n      afterTrack?: (Payload: PayloadDictionary) => void\n    ): PayloadData {\n      return trackSelfDescribingEvent(\n        {\n          schema: 'iglu:com.snowplowanalytics.snowplow/remove_from_cart/jsonschema/1-0-0',\n          data: removeEmptyProperties({\n            sku: sku,\n            name: name,\n            category: category,\n            unitPrice: unitPrice,\n            quantity: quantity,\n            currency: currency,\n          }),\n        },\n        context,\n        tstamp,\n        afterTrack\n      );\n    },\n\n    trackFormFocusOrChange(\n      schema: string,\n      formId: string,\n      elementId: string,\n      nodeName: string,\n      type: string,\n      elementClasses: Array<string>,\n      value: string,\n      context?: Array<SelfDescribingJson>,\n      tstamp?: Timestamp,\n      afterTrack?: (Payload: PayloadDictionary) => void\n    ): PayloadData {\n      let event_schema = '';\n      const event_data: PayloadDictionary = { formId, elementId, nodeName, elementClasses, value };\n      if (schema === 'change_form') {\n        event_schema = 'iglu:com.snowplowanalytics.snowplow/change_form/jsonschema/1-0-0';\n        event_data.type = type;\n      } else if (schema === 'focus_form') {\n        event_schema = 'iglu:com.snowplowanalytics.snowplow/focus_form/jsonschema/1-0-0';\n        event_data.elementType = type;\n      }\n      return trackSelfDescribingEvent(\n        {\n          schema: event_schema,\n          data: removeEmptyProperties(event_data, { value: true }),\n        },\n        context,\n        tstamp,\n        afterTrack\n      );\n    },\n\n    trackFormSubmission(\n      formId: string,\n      formClasses: Array<string>,\n      elements: Array<Record<string, unknown>>,\n      context?: Array<SelfDescribingJson>,\n      tstamp?: Timestamp,\n      afterTrack?: (Payload: PayloadDictionary) => void\n    ): PayloadData {\n      return trackSelfDescribingEvent(\n        {\n          schema: 'iglu:com.snowplowanalytics.snowplow/submit_form/jsonschema/1-0-0',\n          data: removeEmptyProperties({\n            formId: formId,\n            formClasses: formClasses,\n            elements: elements,\n          }),\n        },\n        context,\n        tstamp,\n        afterTrack\n      );\n    },\n\n    trackSiteSearch(\n      terms: Array<string>,\n      filters: Record<string, string | boolean>,\n      totalResults: number,\n      pageResults: number,\n      context?: Array<SelfDescribingJson>,\n      tstamp?: Timestamp,\n      afterTrack?: (Payload: PayloadDictionary) => void\n    ): PayloadData {\n      return trackSelfDescribingEvent(\n        {\n          schema: 'iglu:com.snowplowanalytics.snowplow/site_search/jsonschema/1-0-0',\n          data: removeEmptyProperties({\n            terms: terms,\n            filters: filters,\n            totalResults: totalResults,\n            pageResults: pageResults,\n          }),\n        },\n        context,\n        tstamp,\n        afterTrack\n      );\n    },\n\n    trackConsentWithdrawn(\n      all: boolean,\n      id?: string,\n      version?: string,\n      name?: string,\n      description?: string,\n      context?: Array<SelfDescribingJson>,\n      tstamp?: Timestamp,\n      afterTrack?: (Payload: PayloadDictionary) => void\n    ): PayloadData {\n      const documentJson = {\n        schema: 'iglu:com.snowplowanalytics.snowplow/consent_document/jsonschema/1-0-0',\n        data: removeEmptyProperties({\n          id: id,\n          version: version,\n          name: name,\n          description: description,\n        }),\n      };\n\n      return trackSelfDescribingEvent(\n        {\n          schema: 'iglu:com.snowplowanalytics.snowplow/consent_withdrawn/jsonschema/1-0-0',\n          data: removeEmptyProperties({\n            all: all,\n          }),\n        },\n        documentJson.data && context ? context.concat([documentJson]) : context,\n        tstamp,\n        afterTrack\n      );\n    },\n\n    trackConsentGranted(\n      id: string,\n      version: string,\n      name?: string,\n      description?: string,\n      expiry?: string,\n      context?: Array<SelfDescribingJson>,\n      tstamp?: Timestamp,\n      afterTrack?: (Payload: PayloadDictionary) => void\n    ): PayloadData {\n      const documentJson = {\n        schema: 'iglu:com.snowplowanalytics.snowplow/consent_document/jsonschema/1-0-0',\n        data: removeEmptyProperties({\n          id: id,\n          version: version,\n          name: name,\n          description: description,\n        }),\n      };\n\n      return trackSelfDescribingEvent(\n        {\n          schema: 'iglu:com.snowplowanalytics.snowplow/consent_granted/jsonschema/1-0-0',\n          data: removeEmptyProperties({\n            expiry: expiry,\n          }),\n        },\n        context ? context.concat([documentJson]) : [documentJson],\n        tstamp,\n        afterTrack\n      );\n    },\n\n    addGlobalContexts(contexts: Array<ConditionalContextProvider | ContextPrimitive>): void {\n      globalContextsHelper.addGlobalContexts(contexts);\n    },\n\n    clearGlobalContexts(): void {\n      globalContextsHelper.clearGlobalContexts();\n    },\n\n    removeGlobalContexts(contexts: Array<ConditionalContextProvider | ContextPrimitive>): void {\n      globalContextsHelper.removeGlobalContexts(contexts);\n    },\n  };\n}\n"],"names":["base64.base64encode","isEqual","isPlainObject","has","every","get","map","compact","v4"],"mappings":"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"}