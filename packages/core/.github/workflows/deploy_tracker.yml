name: Deploy Tracker

on:
  push:
    tags:
    - '*.*.*'

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
      SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js 12
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: npm cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Core npm ci
        working-directory: ./core
        run: npm ci
  
      - name: Build core
        working-directory: ./core
        run: npm run build
  
      - name: Test core
        working-directory: ./core
        run: npm run test
  
      - name: Tracker npm ci
        run: npm ci
  
      - name: Build tracker
        run: npm run build
  
      - name: Test tracker
        run: npm run test:unit

      - name: Block Concurrent Executions of E2E Tests
        if: ${{ env.SAUCE_ACCESS_KEY != '' }}
        uses: softprops/turnstyle@v1
        with:
          poll-interval-seconds: 10
          same-branch-only: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
      - name: Add Host for Saucelabs Tunnel
        if: ${{ env.SAUCE_ACCESS_KEY != '' }}
        run: echo "127.0.0.1 snowplow-js-tracker.local" | sudo tee -a /etc/hosts
  
      - name: Run End to End Tests
        run: npm run test:e2e:sauce
        if: ${{ env.SAUCE_ACCESS_KEY != '' }}

      - name: Get tag and tracker version information
        id: version
        run: |
          echo ::set-output name=TAG_VERSION::${GITHUB_REF#refs/*/}
          echo "##[set-output name=TRACKER_VERSION;]$(node -p "require('./package.json').version")"
      
      - name: Fail if version mismatch
        if: ${{ steps.version.outputs.TAG_VERSION != steps.version.outputs.TRACKER_VERSION }}
        run: |
          echo "Tag version (${{ steps.version.outputs.TAG_VERSION }}) doesn't match version in project (${{ steps.version.outputs.TRACKER_VERSION }})"
          exit 1
        
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Snowplow JavaScript Tracker v${{ github.ref }}
          draft: false
          prerelease: ${{ contains(steps.version.outputs.TAG_VERSION, '-M') }}

      - name: Upload sp.js asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./dist/sp.js
          asset_name: sp.js
          asset_content_type: application/javascript
