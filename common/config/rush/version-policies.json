/**
 * This is configuration file is used for advanced publishing configurations with Rush.
 * For full documentation, please see https://rushjs.io
 */

/**
 * A list of version policy definitions.  A "version policy" is a custom package versioning
 * strategy that affects "rush change", "rush version", and "rush publish".  The strategy applies
 * to a set of projects that are specified using the "versionPolicyName" field in rush.json.
 */
[
  {
    /**
     * (Required) Indicates the kind of version policy being defined ("lockStepVersion" or "individualVersion").
     *
     * The "lockStepVersion" mode specifies that the projects will use "lock-step versioning".  This
     * strategy is appropriate for a set of packages that act as selectable components of a
     * unified product.  The entire set of packages are always published together, and always share
     * the same NPM version number.  When the packages depend on other packages in the set, the
     * SemVer range is usually restricted to a single version.
     */
    "definitionName": "lockStepVersion",
  
    /**
     * (Required) The name that will be used for the "versionPolicyName" field in rush.json.
     * This name is also used command-line parameters such as "--version-policy"
     * and "--to-version-policy".
     */
    "policyName": "tracker",
  
    /**
     * (Required) The current version.  All packages belonging to the set should have this version
     * in the current branch.  When bumping versions, Rush uses this to determine the next version.
     * (The "version" field in package.json is NOT considered.)
     */
    "version": "3.24.0",
  
    /**
     * (Required) The type of bump that will be performed when publishing the next release.
     * When creating a release branch in Git, this field should be updated according to the
     * type of release.
     *
     * Valid values are: "prerelease", "release", "minor", "patch", "major"
     */
    "nextBump": "patch"
  }
]
