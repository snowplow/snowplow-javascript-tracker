"use strict";(self.webpackChunkapi_docs=self.webpackChunkapi_docs||[]).push([[21554],{23019:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>c,metadata:()=>i,toc:()=>s});var n=r(85893),o=r(11151);const c={},a=void 0,i={id:"node-tracker/markdown/node-tracker.conditionalcontextprovider",title:"node-tracker.conditionalcontextprovider",description:"Home &gt; @snowplow/node-tracker &gt; ConditionalContextProvider",source:"@site/docs/node-tracker/markdown/node-tracker.conditionalcontextprovider.md",sourceDirName:"node-tracker/markdown",slug:"/node-tracker/markdown/node-tracker.conditionalcontextprovider",permalink:"/snowplow-javascript-tracker/docs/node-tracker/markdown/node-tracker.conditionalcontextprovider",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"node-tracker.buildstructevent",permalink:"/snowplow-javascript-tracker/docs/node-tracker/markdown/node-tracker.buildstructevent"},next:{title:"node-tracker.consentgrantedevent.description",permalink:"/snowplow-javascript-tracker/docs/node-tracker/markdown/node-tracker.consentgrantedevent.description"}},d={},s=[{value:"ConditionalContextProvider type",id:"conditionalcontextprovider-type",level:2}];function l(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.a,{href:"/snowplow-javascript-tracker/docs/node-tracker/markdown/",children:"Home"})," > ",(0,n.jsx)(t.a,{href:"/snowplow-javascript-tracker/docs/node-tracker/markdown/node-tracker",children:"@snowplow/node-tracker"})," > ",(0,n.jsx)(t.a,{href:"/snowplow-javascript-tracker/docs/node-tracker/markdown/node-tracker.conditionalcontextprovider",children:"ConditionalContextProvider"})]}),"\n",(0,n.jsx)(t.h2,{id:"conditionalcontextprovider-type",children:"ConditionalContextProvider type"}),"\n",(0,n.jsx)(t.p,{children:"Conditional context providers are two element arrays used to decide when to attach contexts, where: - the first element is some conditional criterion - the second element is any number of context primitives"}),"\n",(0,n.jsx)("b",{children:"Signature:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-typescript",children:"type ConditionalContextProvider = FilterProvider | RuleSetProvider;\n"})})]})}function p(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},11151:(e,t,r)=>{r.d(t,{Z:()=>i,a:()=>a});var n=r(67294);const o={},c=n.createContext(o);function a(e){const t=n.useContext(c);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),n.createElement(c.Provider,{value:t},e.children)}}}]);